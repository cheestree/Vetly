openapi: 3.0.0
info:
  title: Vetly API
  description: API documentation for Vetly
  version: 1.0.0
servers:
  - url: http://localhost:3000/api

paths:
  /users/{userId}:
    get:
      summary: Get a user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
        '404':
          description: User not found
    put:
      summary: Update a user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: User updated
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found

  /pets:
    get:
      summary: List pets based on user role
      description: |
        - **Members** can only see their own pets.  
        - **Vets** can see all pets.
        - Supports filtering, sorting, and pagination.
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default = 1)
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of results per page (default = 10)
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Sort field and direction (`field,asc` or `field,desc`)
          schema:
            type: string
            example: "name,asc"
        - name: name
          in: query
          description: Filter by pet name (partial match)
          schema:
            type: string
        - name: species
          in: query
          description: Filter by pet species (e.g., dog, cat)
          schema:
            type: string
      responses:
        '200':
          description: A list of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      summary: Add a new pet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                image_url:
                  type: string
                birth_date:
                  type: string
                  format: date
                chip:
                  type: string
      responses:
        '201':
          description: Pet created
  /pets/{petId}:
    get:
      summary: Get a pet by ID
      security:
        - bearerAuth: []
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A pet object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
    put:
      summary: Update a pet by ID
      security:
        - bearerAuth: []
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  name:
                    type: string
                  image_url:
                    type: string
                  birth_date:
                    type: string
                    format: date
                  chip:
                    type: string
      responses:
        '200':
          description: Pet updated
        '404':
          description: Pet not found
    delete:
      summary: Delete a pet by ID
      security:
        - bearerAuth: []
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Pet deleted
        '404':
          description: Pet not found

  /clinics:
    get:
      summary: List all clinics
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default = 1)
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of results per page (default = 10)
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Sort field and direction (`field,asc` or `field,desc`)
          schema:
            type: string
            example: "name,asc"
      responses:
        '200':
          description: A list of clinics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    address:
                      type: string
    post:
      summary: Add a new clinic
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
      responses:
        '201':
          description: Clinic created
  /clinics/{clinicId}:
    get:
      summary: Get a clinic by ID
      security:
        - bearerAuth: []
      parameters:
        - name: clinicId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A clinic object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  lat:
                    type: number
                  lng:
                    type: number
                  phone:
                    type: string
                  email:
                    type: string
                  image_url:
                    type: string
        '404':
          description: Clinic not found
    put:
      summary: Update a clinic by ID
      security:
        - bearerAuth: []
      parameters:
        - name: clinicId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Clinic updated
        '404':
          description: Clinic not found
    delete:
      summary: Delete a clinic by ID
      security:
        - bearerAuth: []
      parameters:
        - name: clinicId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Clinic deleted
        '404':
          description: Clinic not found

  /checkups:
    get:
      summary: List all checkups
      security:
        - bearerAuth: []
      
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default = 1)
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of results per page (default = 10)
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Sort field and direction (`field,asc` or `field,desc`)
          schema:
            type: string
            example: "name,asc"
        - name: petId
          in: query
          required: false
          schema:
            type: integer
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: userId
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of checkups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
    post:
      summary: Add a new checkup
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                petId:
                  type: integer
                date:
                  type: string
                  format: date
      responses:
        '201':
          description: Checkup created
  /checkups/{checkupId}:
    get:
      summary: Get a checkup by ID
      security:
        - bearerAuth: []
      parameters:
        - name: checkupId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A checkup object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Checkup not found
    put:
      summary: Update a checkup by ID
      security:
        - bearerAuth: []
      parameters:
        - name: checkupId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                petId:
                  type: integer
                date:
                  type: string
                  format: date
      responses:
        '200':
          description: Checkup updated
        '404':
          description: Checkup not found
    delete:
      summary: Delete a checkup by ID
      security:
        - bearerAuth: []
      parameters:
        - name: checkupId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Checkup deleted
        '404':
          description: Checkup not found

  /guides:
    get:
      summary: List all guides
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default = 1)
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of results per page (default = 10)
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Sort field and direction (`field,asc` or `field,desc`)
          schema:
            type: string
            example: "name,asc"
      responses:
        '200':
          description: A list of guides
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Guide'
    post:
      summary: Add a new guide
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Guide created
  /guides/{guideId}:
    get:
      summary: Get a guide by ID
      parameters:
        - name: guideId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A guide object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guide'
        '404':
          description: Guide not found
    put:
      summary: Update a guide by ID
      security:
        - bearerAuth: []
      parameters:
        - name: guideId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guide'
      responses:
        '200':
          description: Guide updated
        '404':
          description: Guide not found
    delete:
      summary: Delete a guide by ID
      security:
        - bearerAuth: []
      parameters:
        - name: guideId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Guide deleted
        '404':
          description: Guide not found

components:
  schemas:
    Checkup:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: date
        description:
          type: string
    Guide:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
    Pet:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        image_url:
          type: string
        birth_date:
          type: string
          format: date
        chip:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT